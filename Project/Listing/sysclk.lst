C51 COMPILER V9.60.0.0   SYSCLK                                                            12/02/2021 14:01:37 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SYSCLK
OBJECT MODULE PLACED IN .\Output\sysclk.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Source\sysclk.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -isting\sysclk.lst) TABS(2) OBJECT(.\Output\sysclk.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file      sysclk.c
   4            * @author    MCU Application Team 
   5            * @version   V1.0.0
   6            * @date      12-Oct-2016
   7            * @brief     sysclk
   8            *            History:
   9            *
  10            ******************************************************************************
  11            * @attention
  12            *
  13            * <h2><center>&copy; COPYRIGHT 2019 Silan Microelectronics </center></h2>
  14            *
  15            * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  16            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  17            * AS A RESULT, SILAN MICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  18            * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  19            * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  20            * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  21            *
  22            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25            * DISCLAIMED.
  26            * 
  27            ******************************************************************************
  28            */
  29          #include "sysclk.h"
  30          
  31          /**
  32            * @brief select the source of MCLK
  33            * @param  b_clksel 
  34            *     @arg CLK_SELRCH
  35            *     @arg CLK_SELOSCH
  36            * @retval None
  37            */
  38          void clk_sel(bit b_clksel)
  39          {
  40   1          volatile bit bx;
  41   1        BYTE read;
  42   1        read = MCKSET;
  43   1         
  44   1        if(b_clksel == CLK_SELOSCH) // CLK_SELOSCH 1       // Exterbal Oscilator
  45   1        {
  46   2          P0MDL &= 0xF0;
  47   2          /* IO enable osc fuction */
  48   2          read &= ~(1<<CRYIOEN);  // P0[1:0] used as external oscillator input/output.
  49   2          read |= (1<<CRYEN);   // enable CRYH.
  50   2              HAL_ENTER_CRITICAL(bx);
  51   2              WPKEY = 0x37;       // Writing 37H to WPKEY register will remove write-protection,
  52   2                        // and data should be written to the key register in 3 instruction periods, 
  53   2                        // then the write-protection will reactive.
  54   2          MCKSET = read;
C51 COMPILER V9.60.0.0   SYSCLK                                                            12/02/2021 14:01:37 PAGE 2   

  55   2              t0_wait(1);        /* to wait osc clock stable */
  56   2      
  57   2          /* switch to OSCH£¬close RCH */ 
  58   2              read |= (1<<MCKS);    // SYSCLK is from CRYH.
  59   2          WPKEY = 0x37;
  60   2          MCKSET = read;
  61   2        }
  62   1        else  //  CLK_SELRCH  0     // Internal Oscilator
  63   1        {
  64   2          /* switch to RCH */
  65   2          read &= ~ (1<<MCKS);  //SYSCLK is from RCH (default).
  66   2              HAL_ENTER_CRITICAL(bx);
  67   2          WPKEY = 0x37;       // Writing 37H to WPKEY register will remove write-protection,
  68   2                        // and data should be written to the key register in 3 instruction periods, 
  69   2                        // then the write-protection will reactive.
  70   2          MCKSET = read;
  71   2          read = FALSE;
  72   2      
  73   2              /* wait for switching finish */
  74   2          while(1) 
  75   2          {
  76   3            if( (MCKSET&0x04) == 0x00)
  77   3              break;
  78   3          }   
  79   2      
  80   2          /* close osc£¬set as GPIO */
  81   2          read = MCKSET; 
  82   2          read |= (1<<CRYIOEN);   // P0[1:0] used as GPIO(default).
  83   2          read &= ~(1<<CRYEN);    // disable CRYH (default).
  84   2          WPKEY = 0x37;
  85   2          MCKSET = read;
  86   2        }
  87   1          
  88   1          HAL_EXIT_CRITICAL(bx);
  89   1      }
  90          
  91          /**
  92            * @brief MCLK division
  93            * @param  div_n: can be 1,2,4, or 8 
  94            * @retval None
  95            */
  96          void clk_div(BYTE div_n)
  97          {
  98   1        BYTE read;
  99   1          volatile bit bx;    
 100   1        read = MCKSET;
 101   1        read &= ~(1<<MDIV1 | 1<<MDIV0);
 102   1      
 103   1        switch(div_n)
 104   1        {
 105   2                      // MDIV[1:0]
 106   2          case DEVIDED_FREQ_8:
 107   2              read |= 0x00;   // 00: MCLK frequency is 8 divided-frequency of SYSCLK
 108   2              break;        
 109   2          case DEVIDED_FREQ_4:
 110   2              read |= 0x01; // 01: MCLK frequency is 4 divided-frequency of SYSCLK.
 111   2              break;        
 112   2          case DEVIDED_FREQ_2:
 113   2              read |= 0x02; // 10: MCLK frequency is 2 divided-frequency of SYSCLK.
 114   2              break;        
 115   2          case DEVIDED_FREQ_1:
 116   2              read |= 0x03; // 11: MCLK frequency is same as SYSCLK 
C51 COMPILER V9.60.0.0   SYSCLK                                                            12/02/2021 14:01:37 PAGE 3   

 117   2              break;    
 118   2          default:
 119   2              read = MCKDIV;
 120   2              break;
 121   2        }
 122   1        HAL_ENTER_CRITICAL(bx);
 123   1        WPKEY = 0x37;
 124   1        MCKDIV = read;
 125   1        _nop_();
 126   1        _nop_();
 127   1        HAL_EXIT_CRITICAL(bx);
 128   1      }
 129          
 130          /******************** (C) COPYRIGHT Silan Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    140    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       3
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
