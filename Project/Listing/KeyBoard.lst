C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE KEYBOARD
OBJECT MODULE PLACED IN .\Objects\KeyBoard.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE src\KeyBoard.c BROWSE INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\Listings\Key
                    -Board.lst) OBJECT(.\Objects\KeyBoard.obj)

line level    source

   1          /**
   2          ********************************************************************************
   3          * @file      KeyBoard.c
   4          * @author    xiaodezhou 
   5          * @version   V1.0.0
   6          * @date      12/03/2015
   7          * @breif     按键扫描处理（配合发码）
   8          ********************************************************************************
   9          * History:
  10          * 12/03/2015 V1.0.0
  11          ********************************************************************************
  12          * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  13          * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  14          * AS A RESULT, SLMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  15          * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  16          * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  17          * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  18          *
  19          * THIS SOURCE CODE IS PROTECTED BY A LICENSE.
  20          * FOR MORE INFORMATION PLEASE CAREFULLY READ THE LICENSE AGREEMENT FILE LOCATED
  21          * IN THE ROOT DIRECTORY OF THIS FIRMWARE PACKAGE.
  22          * <h2><center>&copy; COPYRIGHT 2015 Silan Microelectronics </center></h2>
  23          ********************************************************************************
  24          */
  25          
  26          
  27          
  28          //这里还有修改扫描方式，这里是DKW,而DEMO里是矩阵
  29          
  30          #include <INTRINS.H>
  31          #include "SC51F33XX.h"
  32          #include "DataReg.h"
  33          
  34          //========================================================================================================
             -=======//
  35          
  36          void Delay100us()
  37          {
  38   1              U8 i=100;
  39   1              ClrWDT();       //看门狗清零
  40   1              do{
  41   2                 i--;
  42   2          }
  43   1              while(i);
  44   1      }
  45          
  46          
  47          // 按键相关寄存器配置
  48          void KeyRegConfig(void)
  49          {
  50   1              #if(KEYBOARD_TYPE==1)
*** WARNING C322 IN LINE 50 OF src\KeyBoard.c: unknown identifier
                      U8 temp;
                      temp=KBIFLG;
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 2   

                      KBIFLG=0x00;        // 清KBIFLG 
                      temp=KBIFLG;        //                                  ;hca
                  KBIFLG=0x00;        // 清KBIFLG     ;hca  再进STOP之前，把键盘中断标志位清除        
                      #if(STUCKKEYEN==1)
                      if(gbKeyStuck)
                      {// 卡键翻转极性
                              if((P1&0xfc)!=0xfc){            
                                      temp = (P1&0xfc);
                                      xKBIWKP = (~temp)&0xfc;
                              }
                      }
                      else
                      #endif
                      {
                      xKBIWKP = 0x00;         // 低电平唤醒
                      }       
                      xKBICON = 0xfc; 
                      xDKWCON = 0x20;         // 梯形键盘：禁止动态键盘扫描,每个扫描周期间间隔约6.4m
                      #else
  72   1          xKBICON = 0x00;     // 禁止KI0-KI7键盘输入中断
*** ERROR C202 IN LINE 72 OF src\KeyBoard.c: 'xKBICON': undefined identifier
  73   1          xDKWSELP0 = 0x0f;   // P00,P01,P02,P03
*** ERROR C202 IN LINE 73 OF src\KeyBoard.c: 'xDKWSELP0': undefined identifier
  74   1          xDKWSELP1 = 0xfc;   // P12,P13,P14,P15,P16,P17
*** ERROR C202 IN LINE 74 OF src\KeyBoard.c: 'xDKWSELP1': undefined identifier
  75   1          xDKWCON = 0xb0;             // 梯形键盘：禁止动态键盘扫描,每个扫描周期间间隔约12.8m
*** ERROR C202 IN LINE 75 OF src\KeyBoard.c: 'xDKWCON': undefined identifier
  76   1              #endif
  77   1      }
  78          
  79          /*
  80          //===========================================================================
  81          // 名称：keyscan()
  82          // 功能：T型键盘扫描，得到物理键码(行列号形式再转成序号形式)
  83          // 输入：
  84          // 输出：键号0x80及以后为双键,0x80以前为单键
  85          //       0xfe表示有按键按下但是无效键(或无效双键), 0xff表示无键
  86          //       单键号从1开始
  87          // 调用：
  88          // 嵌套级数：
  89          // 影响：P0MDL,P1MDH,P1MDL,P12 P13 P14 P15 P16 P17 P00 P01 P02 P03
  90          // 其它：
  91          //       注意：指示灯管脚位置变化及键盘扫描管脚变化需要修改此程序。
  92          //       支持单键，双键，不支持三键。其中双键的不能有任何一个键落在GND线上。
  93          //       result低8位中，高四拉是列号，低四位是行号。
  94          //       result低8位为第一个键值，高8位为第二个键值(若有双键按下)
  95          //       ffff:表示无键按下，fffe表示无效多键按下。
  96          //===========================================================================
  97          
  98          备    注：如下图2,按键名对应扫描得到并输出的键值,如K56,表示为第5列/第6行的按键
  99                            result=0xffff表示无按键，=0xfffe表示无效多键按下。
 100                    
 101                                    0       1       2       3       4       5       6       7       8       9 
 102                            列 GND P12 P13 P14 P15 P16 P17 P00 P01 P02
 103                            行 P12 P13 P14 P15 P16 P17 P00 P01 P02 P03
 104          -----------------------------------------------------------------------------------------                                                                                                
 105                                                                                                                                                 _____________<GND>
 106                                                                                                                                       _____|_K00_________<P12>
 107                                                                                                                         _____|_K10_|_K01_________<P13>
 108                                                                                                               _____|_K19_|_K11_|_K02_________<P14>
 109                                                                                                 _____|_K27_|_K20_|_K12_|_K03_________<P15>
 110                                                                                       _____|_K34_|_K28_|_K21_|_K13_|_K04_________<P16> 行
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 3   

 111                                                                         _____|_K40_|_K35_|_K29_|_K22_|_K14_|_K05_________<P17>
 112                                                               _____|_K45_|_K41_|_K36_|_K30_|_K23_|_K15_|_K06_________<P00>
 113                                                 _____|_K49_|_K46_|_K42_|_K37_|_K31_|_K24_|_K16_|_K07_________<P01>
 114                               _____|_K52_|_K50_|_K47_|_K43_|_K38_|_K32_|_K25_|_K17_|_K08_________<P02>
 115                                  |_K54_|_K53_|_K51_|_K48_|_K44_|_K39_|_K33_|_K26_|_K18_|_K09_________<P03> 
 116                                          |         |             |         |             |         |             | 列  |         |     |                                                                                                                         
 117                                                                          图2     梯形键盘55KEY接法及扫描值
 118          -----------------------------------------------------------------------------------------
 119          扫描方法:(从右到左、从上到下)
 120          --第1步：所有I/O口设置成输入上拉,判断有无0输入
 121          --第2步：每个端口依次设成输出0, 其余端口设成输入上拉,判断有无0输入
 122          --返回第1步,如此循环,把所有行列的按都扫描一遍后退出程序,并返回扫描结果 
 123          --双键及以上均无法排除，只支持单键
 124          
 125          以下为扫描过程中的端口属性设置值及端口状态,x=0
 126                   P0MDL P1MDH P1MDL              P0[7:0]     P1[7:0]
 127          0        0x55  0x55  0x5x               xxxx1111        111111xx
 128          1        0x55  0x55  0x7x               xxxx1111        111110xx
 129          2        0x55  0x55  0xdx               xxxx1111        111101xx
 130          3        0x55  0x57  0x5x               xxxx1111        111011xx
 131          4        0x55  0x5d  0x5x               xxxx1111        110111xx
 132          5        0x55  0x75  0x5x               xxxx1111        101111xx
 133          6        0x55  0xd5  0x5x               xxxx1111        011111xx
 134          7        0x57  0x55  0x5x               xxxx1110        111111xx
 135          8        0x5d  0x55  0x5x               xxxx1101        111111xx
 136          9        0x75  0x55  0x5x               xxxx1011        111111xx
 137          10       0xd5  0x55  0x5x               xxxx0111        111111xx                                                
 138          ******************************************************************************************/
 139          
 140          
 141          //#define ENALLDOUBLEKEY 1    // ifdef 扫描所有双键(包含有共同行列线的键); ifndef 只扫描非共同线双键
 142          U8 code Scan12IOSet[] =         //扫描过程中各个阶段的端口属性设置、端口状态以及判断值
 143          {
 144                   0x55,  0x55,  0x50,    0x0f,   0xfc,
 145                   0x55,  0x55,  0x70,    0x0f,   0xf8,
 146                   0x55,  0x55,  0xd0,    0x0f,   0xf4,
 147                   0x55,  0x57,  0x50,    0x0f,   0xec,
 148                   0x55,  0x5d,  0x50,    0x0f,   0xdc,
 149                   0x55,  0x75,  0x50,    0x0f,   0xbc,
 150                   0x55,  0xd5,  0x50,    0x0f,   0x7c,
 151                   0x57,  0x55,  0x50,    0x0e,   0xfc,
 152                   0x5d,  0x55,  0x50,    0x0d,   0xfc,
 153                   0x75,  0x55,  0x50,    0x0b,   0xfc,
 154                   0xd5,  0x55,  0x50,    0x07,   0xfc    
 155          };
 156          
 157          // 单键转换表 行列扫描值转换成键号
 158          const U8 code cKeyCovert[]={0x00,0x01,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,
 159                                      0x11,0x12,0x13,0x14,0x15,0x16,0x17,0x18,0x19,
 160                                      0x22,0x23,0x24,0x25,0x26,0x27,0x28,0x29,
 161                                      0x33,0x34,0x35,0x36,0x37,0x38,0x39,
 162                                      0x44,0x45,0x46,0x47,0x48,0x49,
 163                                      0x55,0x56,0x57,0x58,0x59,
 164                                      0x66,0x67,0x68,0x69,
 165                                      0x77,0x78,0x79,
 166                                      0x88,0x89,
 167                                      0x99};
 168          // 双键转换表
 169          // 说明：比如0x2317, 23表示第二列第三行K21, 17表示第1列第7行K17
 170          //       数组的第0个会被转换成按键值0x80,第一个会转换成0x81,...
 171          const U16 code cKeyDBCovert[]={0x2317};
 172          
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 4   

 173          U8 KeyScan(void)
 174          {
 175   1          bit bExitFlag,bFirstGndKey;
 176   1          bit bTemp;
 177   1              U8 m, i, j, k=0;
 178   1              U16 result=0xffff;
 179   1              
 180   1          U8 Ptemp;
 181   1          U8 P1MDLSave;  // P1端口设置保存
 182   1          U8 P1Save,P0Save; // P1,P0端口寄存器保存
 183   1          
 184   1          // P1.0,P1.1作指示灯
 185   1          P1MDLSave = P1MDL & 0x0f;
 186   1          P0Save = P0 & 0xf0;
 187   1          P1Save = P1 & 0x03;    
 188   1              
 189   1              ClrWDT();
 190   1          
 191   1          bExitFlag = 0;
 192   1          bFirstGndKey = 0;
 193   1          m = 0;
 194   1              for(i=0;i<11;i++)                       //扫描列
 195   1              {
 196   2              P0MDL = Scan12IOSet[i*5];
 197   2              P1MDH = Scan12IOSet[i*5+1];     
 198   2                      P1MDL = Scan12IOSet[i*5+2] | P1MDLSave; 
 199   2              
 200   2              Ptemp = Scan12IOSet[i*5+3] | P0Save;        
 201   2                      P0 = Ptemp;       
 202   2              
 203   2                      Ptemp = Scan12IOSet[i*5+4] | P1Save;        
 204   2                      P1 = Ptemp;  
 205   2              
 206   2                      Delay100us();
 207   2                      if(((P0&0x0f)!=Scan12IOSet[i*5+3]) || ((P1&0xfc)!=Scan12IOSet[i*5+4]))
 208   2                      {
 209   3                  k = 0;
 210   3                              for(j=i;j<10;j++)       //检测行
 211   3                              {                
 212   4                                      if(j<6)
 213   4                                      {
 214   5                                              if((P1 & (1<<(j+2))) == 0)              //有按键
 215   5                                              {
 216   6                              bTemp = 0;
 217   6                              if(bFirstGndKey)
 218   6                              {// 已扫描到有一个键在地线一列
 219   7                                  if((U8)(result&0x000f)==j)
 220   7                                  {// 不同列滤除地线键，以支持双键(有一个键地线键)
 221   8                                      bTemp = 1;
 222   8                                  }
 223   7                              }
 224   6                              if(bTemp==0)
 225   6                              {
 226   7                                                      k++;
 227   7                                  if(k==1)
 228   7                                  {// 每行扫描的第一个键
 229   8                                      m++;
 230   8                                      if(m==1)
 231   8                                      {// 第一个键
 232   9                                          result = (i << 4) | j;
 233   9                                      }
 234   8                                      else if(m==2)
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 5   

 235   8                                      {// 第二个键
 236   9                                          result &= 0x00ff;
 237   9                                          result |= ((U16)((i << 4) | j))<<8; // 双键中第二个键，覆盖
 238   9                                      }
 239   8                                      else
 240   8                                      {// 不支持三键及以上
 241   9                                          bExitFlag = 1;
 242   9                                          result = 0xfffe;
 243   9                                          break;
 244   9                                      }                            
 245   8                                  }
 246   7                                  else if(k>=2)
 247   7                                  {// 同一行列双键
 248   8                                      bExitFlag = 1;
 249   8                                      #ifdef ENALLDOUBLEKEY   // 是否使能所有双键组合定义
                                                  result &= 0x00ff;
                                                  result |= ((U16)((i << 4) | j))<<8; // 双键中第二个键，覆盖
                                              #else
 253   8                                          result = 0xfffe;
 254   8                                          break;
 255   8                                      #endif
 256   8                                  }
 257   7                              }
 258   6                                              }
 259   5                                      }
 260   4                                      else
 261   4                                      {
 262   5                                              if((P0 & (1<<(j-6))) == 0)      //有按键
 263   5                                              {
 264   6                              bTemp = 0;
 265   6                              if(bFirstGndKey)
 266   6                              {// 已扫描到有一个键在地线一列
 267   7                                  if((U8)(result&0x000f)==j)
 268   7                                  {// 不同列滤除地线键，以支持双键(有一个键地线键)
 269   8                                      bTemp = 1;
 270   8                                  }
 271   7                              }
 272   6                              if(bTemp==0)
 273   6                              {
 274   7                                                      k++;
 275   7                                  if(k==1)
 276   7                                  {// 每行扫描的第一个键
 277   8                                      m++;
 278   8                                      if(m==1)
 279   8                                      {// 第一个键
 280   9                                          result = (i << 4) | j;
 281   9                                      }
 282   8                                      else if(m==2)
 283   8                                      {// 第二个键
 284   9                                          result &= 0x00ff;
 285   9                                          result |= ((U16)((i << 4) | j))<<8; // 双键中第二个键，覆盖
 286   9                                      }
 287   8                                      else
 288   8                                      {// 不支持三键及以上
 289   9                                          bExitFlag = 1;
 290   9                                          result = 0xfffe;
 291   9                                          break;
 292   9                                      }
 293   8                                  }
 294   7                                  else if(k>=2)
 295   7                                  {// 同一行列双键
 296   8                                      bExitFlag = 1;
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 6   

 297   8                                      #ifdef ENALLDOUBLEKEY   // 是否使能所有双键组合定义
                                                  result &= 0x00ff;
                                                  result |= ((U16)((i << 4) | j))<<8; // 双键中第二个键，覆盖
                                              #else
 301   8                                          result = 0xfffe;
 302   8                                          break;
 303   8                                      #endif
 304   8                                  }
 305   7                              }
 306   6                                              }
 307   5                                      }
 308   4                              }       
 309   3                  if(i==0)
 310   3                  {// GND线
 311   4                      if(k>0)// GND线有键
 312   4                      {
 313   5                          bFirstGndKey = 1;
 314   5                          //bExitFlag = 1; //扫到有地线的键就退出
 315   5                      }
 316   4                  }
 317   3                  if(bExitFlag) break;        
 318   3                      }
 319   2              }
 320   1              P0MDL = 0x55;
 321   1              P1MDH = 0x55;
 322   1              P1MDL = 0x50 | P1MDLSave;
 323   1          
 324   1          // 键码转换
 325   1          if((result&0xff00)==0x0000)
 326   1          {// 单键
 327   2              m = (U8)result;
 328   2              for(i=0; i<MAXKEYNUMS; i++) // 注：可改进加快查找速度(即根据m值确定i的起始值)
*** ERROR C202 IN LINE 328 OF src\KeyBoard.c: 'MAXKEYNUMS': undefined identifier
 329   2              {
 330   3                  if(m==cKeyCovert[i])
 331   3                  {
 332   4                      return i+1;
 333   4                  }
 334   3              }
 335   2              return 0xfe;   // 无效键
 336   2          }
 337   1          else
 338   1          {// 非单键        
 339   2              if(result==0xffff)
 340   2              {return 0xff;}  // 无键
 341   2              else if((result&0x00ff)==0x00fe)
 342   2              {return 0xfe;}  // 无效键
 343   2              else
 344   2              {
 345   3                  for(i=0; i<MAXDBKEYNUMS; i++)
*** ERROR C202 IN LINE 345 OF src\KeyBoard.c: 'MAXDBKEYNUMS': undefined identifier
 346   3                  {
 347   4                      if(result==cKeyDBCovert[i])
 348   4                      {
 349   5                          return 0x80+i;
 350   5                      }
 351   4                  }
 352   3                  return 0xfe;
 353   3              }
 354   2          }
 355   1          
 356   1          return 0xff;
C51 COMPILER V9.03   KEYBOARD                                                              12/04/2015 15:20:03 PAGE 7   

 357   1      }
 358          
 359          //================================================================
 360          //获得按键
 361          U8 StatusSwitch(void)
 362          {// zzl_m 201392
 363   1              U8 KeyCode;     
 364   1              ClrWDT();
 365   1              KeyCode=KeyScan();
 366   1          if(KeyCode!=0xff)
 367   1          {// 先判断有键再进一步检测
 368   2           // 尤其是在非待机且无键情况下跑主程序循环的
 369   2                      DelayMS(15); // 有些客户要求去抖动时间短
 370   2                      if(KeyScan()!=KeyCode)
 371   2                              return 0xfe;    
 372   2                      
 373   2                      // 按键灵敏度
 374   2                      #if(KEYDELAY==1)
*** WARNING C322 IN LINE 374 OF src\KeyBoard.c: unknown identifier
                              DelayMS(60);
                              #endif
 377   2          }
 378   1              return KeyCode;
 379   1      }

C51 COMPILATION COMPLETE.  2 WARNING(S),  6 ERROR(S)
