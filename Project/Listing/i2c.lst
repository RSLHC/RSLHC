C51 COMPILER V9.00   I2C                                                                   04/19/2017 13:53:30 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Output\i2c.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\Libraries\sc51f3364_Periph_Driver\src\i2c.c BROWSE INCDIR(..\..\..
                    -\Libraries\sc51f3364_Periph_Driver\inc;..\..\..\Libraries\sc51f3364_Periph_Driver\src;.\user\inc;.\user\src;..\IR_Sample
                    -) DEBUG OBJECTEXTEND PRINT(.\Listing\i2c.lst) OBJECT(.\Output\i2c.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file      IIC.c
   4            * @author    MCU Application Team 
   5            * @version   V1.0.0
   6            * @date      12-Oct-2016
   7            * @brief     spi functions
   8            *            History:
   9            *
  10            ******************************************************************************
  11            * @attention
  12            *
  13            * <h2><center>&copy; COPYRIGHT 2016 Silan Microelectronics </center></h2>
  14            *
  15            * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  16            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  17            * AS A RESULT, SLMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  18            * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  19            * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  20            * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  21            *
  22            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25            * DISCLAIMED.
  26            * 
  27            ******************************************************************************
  28            */
  29            
  30          #include <INTRINS.H>
  31          #include "SC51F33XX.h"
  32          #include "sc51f33xx_sys.h"
  33          #include "sc51f33xx_hal_conf.h"
  34          #include "i2c.h"
  35          #include "uart.h"
  36          
  37          bit g_bIIC_Response_Flag;
  38          U8 IIC_RecBuf;
  39          
  40          void IICInit(void)
  41          {
  42   1                      xIOMUX0 |= IOMUX_IIC;
  43   1                IIC0CON |= IIC_RATE_8;       /*set transmission/receiving rate as FCLK/8*/
  44   1      #ifdef MASTER
  45   1                 
  46   1      #else                          
                  IIC0ADDR = IIC_SLAVE_ADR;
              #endif
  49   1                AA = 1;                      /*None return singal when transmission/receiving finished*/
  50   1                EIE1 |= 0x02;
  51   1                EA = 1;
  52   1                ENS1 = 1;
  53   1      }
C51 COMPILER V9.00   I2C                                                                   04/19/2017 13:53:30 PAGE 2   

  54          
  55          void IIC_delay(void)
  56          { 
  57   1               U16 n;
  58   1               for(n = 1; n < 750; n++)      
  59   1         {
  60   2            _nop_();
  61   2         }
  62   1      }
  63          
  64          void Pause(void)
  65          {
  66   1          u16 n;
  67   1          for(n = 1; n < 50000; n++)     
  68   1          {
  69   2              _nop_();
  70   2          }
  71   1      }
  72          void I2C_StartTransmission(u8 SlaveID, MSmode Mode)
  73          {
  74   1          SlaveID = ((SlaveID << 1 ) | Mode) ;          
  75   1          /* send start signal */
  76   1          i2c_Start;
  77   1          /* send ID with W/R bit */
  78   1          i2c_write_byte(SlaveID);
  79   1      }
  80          
  81          u8 I2C_ReadAddr(u8 SlaveID, u8 Addr)
  82          {
  83   1          u8 result;
  84   1      
  85   1          /* Send Slave Address */
  86   1          I2C_StartTransmission(SlaveID, MWSR);
  87   1          IIC_delay();
  88   1      
  89   1          /* Write Register Address */
  90   1          i2c_write_byte(Addr);
  91   1          IIC_delay();
  92   1      
  93   1          /* Do a repeated start */
  94   1          IIC0STA = 0x10;//    i2c_RepeatedStart;
  95   1      
  96   1          /* Send Slave Address */
  97   1          i2c_write_byte(( SlaveID << 1) | MRSW );
  98   1          IIC_delay();
  99   1      
 100   1          /* Put in Rx Mode */
 101   1          IIC0STA |= 0x01; 
 102   1          AA = 0;
 103   1      
 104   1          /* Turn off ACK since this is second to last byte being read*/
 105   1          i2c_DisableAck; 
 106   1      
 107   1          result = IIC0DAT;
 108   1          IIC_delay();
 109   1      
 110   1          /* Send stop since about to read last byte */
 111   1          i2c_Stop;
 112   1      
 113   1          /* Read byte */
 114   1          result = IIC0DAT;
 115   1      
C51 COMPILER V9.00   I2C                                                                   04/19/2017 13:53:30 PAGE 3   

 116   1          return result;
 117   1      }
 118          void I2C_WriteAddr(u8 SlaveID, u8 Addr, u8 Data)
 119          {
 120   1          I2C_StartTransmission(SlaveID, MWSR);    
 121   1          IIC_delay();
 122   1      
 123   1          i2c_write_byte(Addr);                   
 124   1          IIC_delay();
 125   1      
 126   1          i2c_write_byte(Data);                   
 127   1          IIC_delay();
 128   1      
 129   1          i2c_Stop;
 130   1      
 131   1          Pause();                                       
 132   1      }
 133          /******************** (C) COPYRIGHT Silan Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    145    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
