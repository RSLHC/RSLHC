C51 COMPILER V9.60.0.0   INIT                                                              07/20/2021 14:05:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INIT
OBJECT MODULE PLACED IN .\Output\init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE user\src\init.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\Libraries\sc51f
                    -3364_Periph_Driver\inc;..\..\..\Libraries\sc51f3364_Periph_Driver\src;.\user\inc;.\user\src;..\IR_Sample) DEBUG OBJECTEX
                    -TEND PRINT(.\Listing\init.lst) TABS(2) OBJECT(.\Output\init.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file      init.c
   4            * @author    MCU Application Team 
   5            * @version   V1.0.0
   6            * @date      6-Mar-2017
   7            * @brief     C source file of init 
   8            *            History:
   9            *
  10            ******************************************************************************
  11            * @attention
  12            *
  13            * <h2><center>&copy; COPYRIGHT 2019 Silan Microelectronics </center></h2>
  14            *
  15            * THE PRESENT SOFTWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  16            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  17            * AS A RESULT, SLMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  18            * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  19            * CONTENT OF SUCH SOFTWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  20            * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  21            *
  22            * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23            * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24            * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25            * DISCLAIMED.
  26            * 
  27            ******************************************************************************
  28            */
  29          #include <INTRINS.H>
  30          #include "SC51F33XX.h"
  31          #include "sc51f33xx_hal_conf.h"
  32          #include "crt.h"
  33          #include "init.h"
  34          
  35          /**
  36           * Function: system register initial
  37          */
  38          void sys_init()
  39          {
  40   1          /* Test control Register*/
  41   1        xTESTCON = 0x00;
  42   1      
  43   1        /* System configuration Register, Initial value : 81H */
  44   1          xSYSCFG = 0           
  45   1                | (1<<RSTCFG)  /* 0: P10 set as GPIO, 1: P10 set as external reset(default) */
  46   1                | (1<<RCLCFG); /* 0: RCL keep on, 1: The RCL is on in working mode, and off in STOP/IDLE mode (d
             -efault). */ 
  47   1      
  48   1        /* System configuration2 Register, Initial value : 01H */
  49   1        xSYSCFG2  = 0
  50   1                  | (1<<DREN); /* 0: LPVR is off, 1: LPVR is on(default) */
  51   1      
  52   1        /* STOP mode configuration register */
C51 COMPILER V9.60.0.0   INIT                                                              07/20/2021 14:05:38 PAGE 2   

  53   1          xSTOPCFG |= (1<<PWRCFG); 
  54   1                  /*  0: in stop mode, MVR is on, and LVR and LVD are controledl by LVREN and LVDEN.
  55   1                    1: in stop mode, LVR and LVD are off. If DREN=1, then MVR and BGR are off, 
  56   1                      core is supplied by LPVR. Awaking from STOP mode will enable BGR and MVR, 
  57   1              and the power-supply will switch to MVR. 
  58   1                    If the DREN=0, then MVR and BGR is on, detail please refer to Tab 12-1. */
  59   1      }
  60          
  61          ///**
  62          //  * @brief  IO port initialize for IR test
  63          //  * @note   P22,P27,P33,P32`,P31 LED as the display of key
  64          //  */
  65          //void io_init_LowPower(void)
  66          //{
  67          //  P2MDL = 0xAF;
  68          //  P2MDH = 0xAA;
  69          //  P3MDL = 0xAA;
  70          //  P2 = 0xFF;
  71          //  P3 = 0xFE;
  72          //    xP10MDL = 0xa9;
  73          //}
  74          ///**
  75          //  * @brief  IO port initialize for 168 test
  76          //  * @retval None
  77          //  */
  78          //void io_init_168(void)
  79          //{
  80          //    /* IO input or output config */
  81          //    P0MDL = 0x55;
  82          //    P0MDH = 0x55;
  83          //    P1MDL = 0xAA;
  84          //    P1MDH = 0xAA;
  85          //    P2MDL = 0xA5;
  86          //  P2MDH = 0x82;
  87          //  P3MDL = 0xAA;
  88          //    xP10MDL = 0xa9;
  89          //    /* IO value initial*/
  90          //    P2 = 0xff;
  91          //    P3 = 0xff;
  92          //}
  93          /**
  94            * @brief  IO port initialize for IR test
  95            * @note   P22,P27,P33,P32,P31 LED as the display of key
  96            */
  97          void io_init_IR(void)
  98          {
  99   1        /*  When Px.n set as output, if register Px[n]=0, the Px.n output logic low; 
 100   1          else if Px[n]=1，then the Px.n output logic high(push-pull output) or Hi-Z(open-drain output).  
 101   1          Reading register Px[n] is not affected by the P0.n port status.
 102   1          When Px.n set as input, writing register Px[n] doesn’t affect Px.n port status. 
 103   1          When Reading register Px[n], value 0 means Px.n input logic low, and value 1 means Px.n input logic hi
             -gh.*/
 104   1      
 105   1      /*  {OE,MD} Port mode control bit: {PxOE[n],PxMD[n]} control port Px.n
 106   1          00: floating input;
 107   1          01: pull-up input;
 108   1          10: push-pull output;
 109   1          11: open-drain output. */
 110   1      
 111   1      /********************************************************************/
 112   1      /* Key Matrix input pull-up init                                    */
 113   1      /* P1.0 ~ P1.7 (8)                                                  */
C51 COMPILER V9.60.0.0   INIT                                                              07/20/2021 14:05:38 PAGE 3   

 114   1      /********************************************************************/
 115   1        /* Data register */
 116   1        P1 = _0000_0000B;
 117   1        
 118   1        /* P1 mode control register */
 119   1        P1MDH = _0101_0101B; // P1OE7 P1MD7 | P1OE6 P1MD6 | P1OE5 P1MD5 | P1OE4 P1MD4 // 0x55
 120   1        P1MDL = _0101_0101B; // P1OE3 P1MD3 | P1OE2 P1MD2 | P1OE1 P1MD1 | P1OE0 P1MD0 // 0x55
 121   1      
 122   1      
 123   1      /********************************************************************/
 124   1      /* Key Matrix output push-pull init                                 */
 125   1      /* P2.0 P2.1 P2.2 P2.5 P2.6 P0.6 P0.7 (7)                           */
 126   1      /********************************************************************/
 127   1        /* Data register */
 128   1        P2 = 0 | _0110_0111B;
 129   1        P0 = 0 | _1100_0000B;
 130   1        
 131   1        /* P2 mode control register */
 132   1        P2MDH = _0110_1001B; // P2OE7 P2MD7 | P2OE6 P2MD6 | P2OE5 P2MD5 | P2OE4 P2MD4 // 0x69
 133   1        P2MDL = _0110_1010B; // P2OE3 P2MD3 | P2OE2 P2MD2 | P2OE1 P2MD1 | P2OE0 P2MD0 // 0x6A
 134   1        /* P0 mode control register (high byte)*/
 135   1        P0MDH = _1010_0101B; // P0OE7 P0MD7 | P0OE6 P0MD6 | P0OE5 P0MD5 | P0OE4 P0MD4 // 0xA5
 136   1      
 137   1      /********************************************************************/
 138   1      /* Led output init                                                  */
 139   1      /* P0.0                                                             */  
 140   1      /********************************************************************/
 141   1        /* Data register */ 
 142   1        P0 |= _0000_0001B;
 143   1      
 144   1        /* P0 mode control register (low byte)*/
 145   1        P0MDL = _0101_0110B; // P0OE3 P0MD3 | P0OE2 P0MD2 | P0OE1 P0MD1 | P0OE0 P0MD0 // 0x56
 146   1      
 147   1      
 148   1      /********************************************************************/
 149   1      /* IR port init                                                     */
 150   1      /* REM : P3.0                                                       */
 151   1      /********************************************************************/
 152   1        /* Data register */
 153   1        P3 = _1111_1110B; 
 154   1      
 155   1        /* P3 mode control register (low byte) */     
 156   1        P3MDH = _1010_1010B; // P3OE7 P3MD7 | P3OE6 P3MD6 | P3OE5 P3MD5 | P3OE4 P3MD4 // 0xAA
 157   1      
 158   1      
 159   1      
 160   1      /* P10 mode control register (low byte) */ 
 161   1        xP10MDL = _1010_1001B; // - - - - - - P10OE0 P10MD0 // 0xA9
 162   1      
 163   1        _nop_();
 164   1      }
 165          ///**
 166          //  * @brief  System register initial
 167          //  * @retval None
 168          //  */
 169          //void sys_init(void)
 170          //{
 171          //    /* WDT Enabled when fisrt call ClrWDT(),
 172          //       after that WDT cannot be disabled */
 173          //    WDTCON = 0xff;    /* 0xff: intial value and clock prescale --> default */
 174          //    
 175          //  /* Bit0 can only be wrote once ,output sysclock 16M*/
C51 COMPILER V9.60.0.0   INIT                                                              07/20/2021 14:05:38 PAGE 4   

 176          //    xTESTCON = TESTCON_INIT;
 177          //    
 178          //    /* All bits except bit4 (WDTCFG), can only be wrote once */
 179          //    xSYSCFG = SYSCFG_INIT;
 180          //  
 181          //    /* can only be wrote once, 
 182          //       suggest xSTOPCFG=0x08, against errors in power off and power on process */
 183          //    xSTOPCFG= STOPCFG_INIT;
 184          //    
 185          //    /* can only be wrote once */
 186          //    xSYSCFG2 = SYSCFG2_INIT;
 187          //    
 188          //    /* bit6: REMEN = 1 */
 189          //    xIOMUX0 = 0x40;
 190          //    
 191          //    /*xIOMUX1 = 0x40; */      /* CPO��������ܽţ�CP0���������T2EXi */
 192          //}
 193          /**
 194            * @brief  crt initialize and set for IR test
 195            * @retval None
 196            */
 197          void crt_init_IR(void)
 198          {
 199   1        //CRT_onoff(CRT_ON);
 200   1        CRT_modesel(CRT_MODULATE);
 201   1        CRT_insel(CRT_INP30);
 202   1        //CRT_clkset(0);
 203   1        CRT_clkdiv(0);
 204   1        CRT_REM2P30();
 205   1        CRT_remops(0);
 206   1      //  CRT_carryset(0XCADD);
 207   1      
 208   1      }
 209          ///**
 210          //  * @brief  crt initialize and set for 168 test
 211          //  * @retval None
 212          //  */
 213          //void crt_init_168(void)
 214          //{
 215          //  CRT_onoff(CRT_ON);
 216          //  CRT_modesel(CRT_MODULATE);
 217          //  CRT_insel(CRT_INT168);
 218          //    CRT_clkdiv(1);
 219          //  CRT_REM2P30();
 220          //  CRT_remops(0);
 221          //}
 222          ///**
 223          //  * @brief  crt initialize and set for lowpower test
 224          //  * @retval None
 225          //  */
 226          //void crt_init_LowPower(void)
 227          //{
 228          //    CRT_onoff(CRT_ON);
 229          //  CRT_modesel(CRT_MODULATE);
 230          //  CRT_insel(CRT_INP30);
 231          //  //CRT_clkset(0);
 232          //    CRT_clkdiv(0);
 233          //  CRT_REM2P30();
 234          //  CRT_remops(1);
 235          //  CRT_carryset(0XCADD);
 236          //}
 237          /**
C51 COMPILER V9.60.0.0   INIT                                                              07/20/2021 14:05:38 PAGE 5   

 238            * @brief  KBI key setting
 239            * @retval None
 240            */
 241          //void kbi_init(void)
 242          //{
 243          //  kbi_p1en(0xff);
 244          //  kbi_inten();
 245          //}
 246          /******************** (C) COPYRIGHT Silan Microelectronics *****END OF FILE****/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     90    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
